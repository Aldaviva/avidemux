// automatically generated by admSerialization.py, do not edit!
extern const ADM_paramList FFcodecContext_param[]={
 {"version",offsetof(FFcodecContext,version),"uint32_t",ADM_param_uint32_t},
 {"MultiThreaded",offsetof(FFcodecContext,MultiThreaded),"uint32_t",ADM_param_uint32_t},
 {"_4MV",offsetof(FFcodecContext,_4MV),"bool",ADM_param_bool},
 {"_QPEL",offsetof(FFcodecContext,_QPEL),"bool",ADM_param_bool},
 {"_TRELLIS_QUANT",offsetof(FFcodecContext,_TRELLIS_QUANT),"bool",ADM_param_bool},
 {"qmin",offsetof(FFcodecContext,qmin),"uint32_t",ADM_param_uint32_t},
 {"qmax",offsetof(FFcodecContext,qmax),"uint32_t",ADM_param_uint32_t},
 {"max_qdiff",offsetof(FFcodecContext,max_qdiff),"uint32_t",ADM_param_uint32_t},
 {"max_b_frames",offsetof(FFcodecContext,max_b_frames),"uint32_t",ADM_param_uint32_t},
 {"mpeg_quant",offsetof(FFcodecContext,mpeg_quant),"uint32_t",ADM_param_uint32_t},
 {"is_luma_elim_threshold",offsetof(FFcodecContext,is_luma_elim_threshold),"uint32_t",ADM_param_uint32_t},
 {"luma_elim_threshold",offsetof(FFcodecContext,luma_elim_threshold),"uint32_t",ADM_param_uint32_t},
 {"is_chroma_elim_threshold",offsetof(FFcodecContext,is_chroma_elim_threshold),"uint32_t",ADM_param_uint32_t},
 {"chroma_elim_threshold",offsetof(FFcodecContext,chroma_elim_threshold),"uint32_t",ADM_param_uint32_t},
 {"lumi_masking",offsetof(FFcodecContext,lumi_masking),"float",ADM_param_float},
 {"is_lumi_masking",offsetof(FFcodecContext,is_lumi_masking),"int32_t",ADM_param_int32_t},
 {"dark_masking",offsetof(FFcodecContext,dark_masking),"float",ADM_param_float},
 {"is_dark_masking",offsetof(FFcodecContext,is_dark_masking),"int32_t",ADM_param_int32_t},
 {"qcompress",offsetof(FFcodecContext,qcompress),"float",ADM_param_float},
 {"qblur",offsetof(FFcodecContext,qblur),"float",ADM_param_float},
 {"minBitrate",offsetof(FFcodecContext,minBitrate),"uint32_t",ADM_param_uint32_t},
 {"maxBitrate",offsetof(FFcodecContext,maxBitrate),"uint32_t",ADM_param_uint32_t},
 {"user_matrix",offsetof(FFcodecContext,user_matrix),"uint32_t",ADM_param_uint32_t},
 {"gop_size",offsetof(FFcodecContext,gop_size),"uint32_t",ADM_param_uint32_t},
 {"interlaced",offsetof(FFcodecContext,interlaced),"bool",ADM_param_bool},
 {"bff",offsetof(FFcodecContext,bff),"bool",ADM_param_bool},
 {"widescreen",offsetof(FFcodecContext,widescreen),"bool",ADM_param_bool},
 {"mb_eval",offsetof(FFcodecContext,mb_eval),"uint32_t",ADM_param_uint32_t},
 {"vratetol",offsetof(FFcodecContext,vratetol),"uint32_t",ADM_param_uint32_t},
 {"is_temporal_cplx_masking",offsetof(FFcodecContext,is_temporal_cplx_masking),"bool",ADM_param_bool},
 {"temporal_cplx_masking",offsetof(FFcodecContext,temporal_cplx_masking),"float",ADM_param_float},
 {"is_spatial_cplx_masking",offsetof(FFcodecContext,is_spatial_cplx_masking),"bool",ADM_param_bool},
 {"spatial_cplx_masking",offsetof(FFcodecContext,spatial_cplx_masking),"float",ADM_param_float},
 {"_NORMALIZE_AQP",offsetof(FFcodecContext,_NORMALIZE_AQP),"bool",ADM_param_bool},
 {"use_xvid_ratecontrol",offsetof(FFcodecContext,use_xvid_ratecontrol),"bool",ADM_param_bool},
 {"bufferSize",offsetof(FFcodecContext,bufferSize),"uint32_t",ADM_param_uint32_t},
 {"override_ratecontrol",offsetof(FFcodecContext,override_ratecontrol),"bool",ADM_param_bool},
 {"dummy",offsetof(FFcodecContext,dummy),"uint32_t",ADM_param_uint32_t},
{NULL,0,NULL}
};
